// <auto-generated>
// MIT
// </auto-generated>

namespace Eryph.ComputeClient.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class VirtualMachine
    {
        /// <summary>
        /// Initializes a new instance of the VirtualMachine class.
        /// </summary>
        public VirtualMachine()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VirtualMachine class.
        /// </summary>
        /// <param name="status">Possible values include: 'Stopped', 'Running',
        /// 'Pending', 'Error'</param>
        public VirtualMachine(string id = default(string), string name = default(string), string status = default(string), IList<MachineNetwork> networks = default(IList<MachineNetwork>), IList<VirtualMachineNetworkAdapter> networkAdapters = default(IList<VirtualMachineNetworkAdapter>), IList<VirtualMachineDrive> drives = default(IList<VirtualMachineDrive>))
        {
            Id = id;
            Name = name;
            Status = status;
            Networks = networks;
            NetworkAdapters = networkAdapters;
            Drives = drives;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Stopped', 'Running',
        /// 'Pending', 'Error'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "networks")]
        public IList<MachineNetwork> Networks { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "networkAdapters")]
        public IList<VirtualMachineNetworkAdapter> NetworkAdapters { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "drives")]
        public IList<VirtualMachineDrive> Drives { get; set; }

    }
}
