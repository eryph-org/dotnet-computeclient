// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Eryph.ComputeClient.Models
{
    public partial class Catlet
    {
        internal static Catlet DeserializeCatlet(JsonElement element)
        {
            Optional<string> id = default;
            Optional<string> name = default;
            Optional<CatletStatus> status = default;
            Optional<IReadOnlyList<CatletNetwork>> networks = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        id = null;
                        continue;
                    }
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        name = null;
                        continue;
                    }
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("status"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    status = new CatletStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("networks"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        networks = null;
                        continue;
                    }
                    List<CatletNetwork> array = new List<CatletNetwork>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(CatletNetwork.DeserializeCatletNetwork(item));
                    }
                    networks = array;
                    continue;
                }
            }
            return new Catlet(id.Value, name.Value, Optional.ToNullable(status), Optional.ToList(networks));
        }
    }
}
