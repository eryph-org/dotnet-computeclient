// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Eryph.ComputeClient.Models
{
    /// <summary> The Operation. </summary>
    public partial class Operation
    {
        /// <summary> Initializes a new instance of Operation. </summary>
        internal Operation()
        {
            Resources = new ChangeTrackingList<OperationResource>();
            LogEntries = new ChangeTrackingList<OperationLogEntry>();
            Projects = new ChangeTrackingList<Project>();
        }

        /// <summary> Initializes a new instance of Operation. </summary>
        /// <param name="id"></param>
        /// <param name="status"></param>
        /// <param name="statusMessage"></param>
        /// <param name="resources"></param>
        /// <param name="logEntries"></param>
        /// <param name="projects"></param>
        internal Operation(string id, OperationStatus? status, string statusMessage, IReadOnlyList<OperationResource> resources, IReadOnlyList<OperationLogEntry> logEntries, IReadOnlyList<Project> projects)
        {
            Id = id;
            Status = status;
            StatusMessage = statusMessage;
            Resources = resources;
            LogEntries = logEntries;
            Projects = projects;
        }

        /// <summary> Gets the id. </summary>
        public string Id { get; }
        /// <summary> Gets the status. </summary>
        public OperationStatus? Status { get; }
        /// <summary> Gets the status message. </summary>
        public string StatusMessage { get; }
        /// <summary> Gets the resources. </summary>
        public IReadOnlyList<OperationResource> Resources { get; }
        /// <summary> Gets the log entries. </summary>
        public IReadOnlyList<OperationLogEntry> LogEntries { get; }
        /// <summary> Gets the projects. </summary>
        public IReadOnlyList<Project> Projects { get; }
    }
}
