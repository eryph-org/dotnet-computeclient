// <auto-generated>
// MIT
// </auto-generated>

namespace Eryph.ComputeClient.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class VirtualDisk
    {
        /// <summary>
        /// Initializes a new instance of the VirtualDisk class.
        /// </summary>
        public VirtualDisk()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VirtualDisk class.
        /// </summary>
        public VirtualDisk(System.Guid? id = default(System.Guid?), string name = default(string), string storageIdentifier = default(string), string dataStore = default(string), string project = default(string), string environment = default(string), string path = default(string), long? sizeBytes = default(long?), System.Guid? parentId = default(System.Guid?), IList<VirtualMachineDrive> attachedDrives = default(IList<VirtualMachineDrive>))
        {
            Id = id;
            Name = name;
            StorageIdentifier = storageIdentifier;
            DataStore = dataStore;
            Project = project;
            Environment = environment;
            Path = path;
            SizeBytes = sizeBytes;
            ParentId = parentId;
            AttachedDrives = attachedDrives;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid? Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "storageIdentifier")]
        public string StorageIdentifier { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dataStore")]
        public string DataStore { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "project")]
        public string Project { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "environment")]
        public string Environment { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "path")]
        public string Path { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sizeBytes")]
        public long? SizeBytes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "parentId")]
        public System.Guid? ParentId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "attachedDrives")]
        public IList<VirtualMachineDrive> AttachedDrives { get; set; }

    }
}
