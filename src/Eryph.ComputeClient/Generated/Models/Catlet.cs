// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Eryph.ComputeClient.Models
{
    /// <summary> The Catlet. </summary>
    public partial class Catlet
    {
        /// <summary> Initializes a new instance of Catlet. </summary>
        internal Catlet()
        {
            Networks = new ChangeTrackingList<CatletNetwork>();
        }

        /// <summary> Initializes a new instance of Catlet. </summary>
        /// <param name="id"></param>
        /// <param name="name"></param>
        /// <param name="status"></param>
        /// <param name="networks"></param>
        internal Catlet(string id, string name, CatletStatus? status, IReadOnlyList<CatletNetwork> networks)
        {
            Id = id;
            Name = name;
            Status = status;
            Networks = networks;
        }

        /// <summary> Gets the id. </summary>
        public string Id { get; }
        /// <summary> Gets the name. </summary>
        public string Name { get; }
        /// <summary> Gets the status. </summary>
        public CatletStatus? Status { get; }
        /// <summary> Gets the networks. </summary>
        public IReadOnlyList<CatletNetwork> Networks { get; }
    }
}
