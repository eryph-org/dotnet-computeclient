// <auto-generated>
// MIT
// </auto-generated>

namespace Haipa.ComputeClient.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class VirtualMachineConfig
    {
        /// <summary>
        /// Initializes a new instance of the VirtualMachineConfig class.
        /// </summary>
        public VirtualMachineConfig()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VirtualMachineConfig class.
        /// </summary>
        public VirtualMachineConfig(string slug = default(string), string dataStore = default(string), VirtualMachineCpuConfig cpu = default(VirtualMachineCpuConfig), VirtualMachineMemoryConfig memory = default(VirtualMachineMemoryConfig), IList<VirtualMachineDriveConfig> drives = default(IList<VirtualMachineDriveConfig>), IList<VirtualMachineNetworkAdapterConfig> networkAdapters = default(IList<VirtualMachineNetworkAdapterConfig>))
        {
            Slug = slug;
            DataStore = dataStore;
            Cpu = cpu;
            Memory = memory;
            Drives = drives;
            NetworkAdapters = networkAdapters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "slug")]
        public string Slug { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dataStore")]
        public string DataStore { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cpu")]
        public VirtualMachineCpuConfig Cpu { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "memory")]
        public VirtualMachineMemoryConfig Memory { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "drives")]
        public IList<VirtualMachineDriveConfig> Drives { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "networkAdapters")]
        public IList<VirtualMachineNetworkAdapterConfig> NetworkAdapters { get; set; }

    }
}
